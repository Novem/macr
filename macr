#!/usr/bin/python3
# -*- coding: utf-8 -*-
#
#
#    macr - Randomizes MAC Addresses and much more
#       
#    Copyright 2011  <Abirz Novem>
#       
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# 


import argparse
import macr

# Debugging
debug_out = False
#debug_out = True


def main():

# Parser argv.
    parser = argparse.ArgumentParser(
            description='macr - Randomizes MAC addresses and much more')
    parser.add_argument('-i', '--interface', action='append',
                        help='Set interface name.')
    parser.add_argument('-a', '--address', action='store', dest='address',
                        help='Manually sets the mac address.')
    parser.add_argument('-p', '--profile', action='store', dest='profile',
                        help='...')
    parser.add_argument('-s', '--show', action='store_true', 
                        dest='show', 
                        help='Display current mac address and exit')
    parser.add_argument('-e', '--end', action='store_true',  
                        dest='end', 
                        help='Change the ending and keeps the vendor bytes')
    parser.add_argument('-b', '--begin', action='store_true',
                        dest='begin',
                        help='...')
    parser.add_argument('-m', '--manufacturer', action='store',  
                        dest='manufacturer', 
                        help='Sets the first 3 bytes to match a' 
                        ' mac address of the given vendor.')
    parser.add_argument('-v', '--verbose', action='store_true', dest='verbose',
                        help='Verbose output.')
    parser.add_argument('-c', '--conf', action='store', dest='confFile',
                       help='Use a different conf file.')

    arg = parser.parse_args()

    if debug_out == True:
        print(arg)

# are we using the default conf file
    if arg.confFile is None:
        arg.confFile = '/etc/macr/macr.conf'
        

# No interface use the default
    if arg.interface is None:
        arg.interface = []
        arg.interface.append(macr.fileSearch('interface', arg.confFile))
        if arg.verbose is True:
            print('Using default interface:', arg.interface)
        
# action object
    action = macr.Action()




# Display current mac address and exit
    if arg.show is True:
        action.showAddr(arg.interface)
        exit(0)

# change the ending of the mac addr
    if arg.end is True:
        if arg.verbose is True:
            print('Changing the ending of', arg.interface)
        action.chEnding(arg.interface)
        exit(0)

# change the beginning of the mac addr
    if arg.begin is True:
        action.chBeginning(arg.interface)
        exit(0)

# Set the vendor bytes
    if arg.manufacturer is not None:
        if arg.verbose is True:
            print('Mac address will appear to be from', arg.manufacturer.lower())
        action.manufact(arg.interface, arg.manufacturer)
        exit(0)

# Manually sets the mac address.
    if arg.address is not None:
        if arg.verbose is True:
            print('Using mac address:', arg.address)
        action.manAddr(arg.interface, arg.address)
        exit(0)

# Profiles 
    if arg.profile is not None:
        action.profile(arg.interface, arg.profile)
        exit(0)

# No arguments default
    action.random(arg.interface)
    exit(0)

    return 0


if __name__ == '__main__':
    main()


# vim: ai ts=4 sts=4 et sw=4 ft=python
